public final class org/corestudio/ide/CoreStudioPlugin : com/intellij/openapi/startup/ProjectActivity {
	public fun <init> ()V
	public fun execute (Lcom/intellij/openapi/project/Project;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/corestudio/ide/actions/HotReloadAction : com/intellij/openapi/actionSystem/AnAction {
	public fun <init> ()V
	public fun actionPerformed (Lcom/intellij/openapi/actionSystem/AnActionEvent;)V
}

public final class org/corestudio/ide/actions/RunAction : com/intellij/openapi/actionSystem/AnAction {
	public fun <init> ()V
	public fun actionPerformed (Lcom/intellij/openapi/actionSystem/AnActionEvent;)V
}

public final class org/corestudio/ide/actions/StopAction : com/intellij/openapi/actionSystem/AnAction {
	public fun <init> ()V
	public fun actionPerformed (Lcom/intellij/openapi/actionSystem/AnActionEvent;)V
}

public final class org/corestudio/ide/services/EngineService {
	public fun <init> ()V
	public final fun hotReload ()V
	public final fun init (Lcom/intellij/openapi/project/Project;)V
	public final fun start ()V
	public final fun stop ()V
}

public final class org/corestudio/ide/services/Telemetry {
	public fun <init> (IIDD)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun component3 ()D
	public final fun component4 ()D
	public final fun copy (IIDD)Lorg/corestudio/ide/services/Telemetry;
	public static synthetic fun copy$default (Lorg/corestudio/ide/services/Telemetry;IIDDILjava/lang/Object;)Lorg/corestudio/ide/services/Telemetry;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDrawCalls ()I
	public final fun getFps ()I
	public final fun getMsRender ()D
	public final fun getMsUpdate ()D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/corestudio/ide/services/TelemetryBus {
	public static final field INSTANCE Lorg/corestudio/ide/services/TelemetryBus;
	public final fun getState ()Lkotlinx/coroutines/flow/StateFlow;
	public final fun publish (IIDD)V
}

public final class org/corestudio/ide/toolwindows/InspectorToolWindowFactory : com/intellij/openapi/wm/ToolWindowFactory {
	public fun <init> ()V
	public fun createToolWindowContent (Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/wm/ToolWindow;)V
}

public final class org/corestudio/ide/toolwindows/ProfilerToolWindowFactory : com/intellij/openapi/wm/ToolWindowFactory {
	public fun <init> ()V
	public fun createToolWindowContent (Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/wm/ToolWindow;)V
}

public final class org/corestudio/ide/toolwindows/SceneGraphToolWindowFactory : com/intellij/openapi/wm/ToolWindowFactory {
	public fun <init> ()V
	public fun createToolWindowContent (Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/wm/ToolWindow;)V
}

public final class org/corestudio/ide/toolwindows/ViewportToolWindowFactory : com/intellij/openapi/wm/ToolWindowFactory {
	public fun <init> ()V
	public fun createToolWindowContent (Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/wm/ToolWindow;)V
}

public final class org/corestudio/ide/ui/InspectorPanel : javax/swing/JPanel {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
}

public final class org/corestudio/ide/ui/ProfilerPanel : javax/swing/JPanel {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
}

public final class org/corestudio/ide/ui/SceneGraphPanel : javax/swing/JPanel {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
}

public final class org/corestudio/ide/ui/SwingFlowKt {
	public static final fun collectInSwing (Lkotlinx/coroutines/flow/StateFlow;Ljava/awt/Component;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Job;
}

public final class org/corestudio/ide/ui/ViewportPanel : com/intellij/ui/components/JBPanel {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
}

